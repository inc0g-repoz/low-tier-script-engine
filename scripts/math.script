function fibbonacci(count) {
    n = new_array("java.lang.Integer", count);
    n[0] = 0;
    n[1] = 1;

    // Loop starts from 2 because 0 and 1 are already printed
    for (i = 2; i < count; i++) {
        n[i] = n[i - 1] + n[i - 2];
    }

    return n;
}

function factorial_i(n) {
    rv = 1;
    while (n != 1) {
        rv *= n--;
    }
    return rv;
}

function factorial_r(n) {
    if (n == 1) return 1;
    else return n * factorial_i(--n);
}

function factorial(n) {
    return factorial_r(n);
}

function abs(n) {
    if (n < 0) return -n;
    return n;
}

function pow(n1, n2) {
    rv = 1;
    if (n2 == 0) {
        return rv;
    } else if (n2 > 0) {
        for (i = 0; i < n2; i++) {
            rv *= n1;
        }
    } else if (n2 < 0) {
        n2 = -n2;
        for (i = 0; i < n2; i++) {
            rv *= n1;
        }
        rv = 1 / rv;
    }
    return rv;
}
