// Script file for testing

function fibbonacci(hook, count) {
    n1 = 0;
    n2 = 1;
    n3 = 0;

    // Printing 0 and 1
    hook.out.println(n1);
    hook.out.println(n2);

    // Loop starts from 2 because 0 and 1 are already printed
    for (i = 2; i < count; i++) {
        n3 = n1 + n2;
        hook.out.println(n3);
        n1 = n2;
        n2 = n3;
    }
}

function factorial_r(n) {
    if (n == 1) return 1;
    else return n * factorial(--n);
}

function factorial(n) {
    rv = 1;
    while (n != 1) {
        rv *= n--;
    }
    return rv;
}

function sleep(hook, time) {
    sleepTime = 0;
    hook.thread.sleep(time);
    hook.out.println("Slept for " + time + " ms");
}

function main(hook) {
//  fibbonacci(hook, 5);

    n = 5;
    f = factorial(n);
    hook.out.println("Factorial of " + n + " equals " + f);
    hook.out.println("f is a " + f.getClass());

//  sleep(hook, 0);

    v = 5;
    hook.out.println(++v + " is an integer");
}
